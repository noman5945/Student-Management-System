/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package studentmanagementsystem;

import com.mysql.jdbc.PreparedStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class Attendence extends javax.swing.JFrame {

    /**
     * Creates new form Attendence
     */
    DefaultTableModel model;
    Object rowdata[]=new Object[16];
    public Attendence() {
        initComponents();
        model=(DefaultTableModel) ATtable.getModel();
    }
    
    Connection con;
    PreparedStatement pst,pst2;
    ResultSet rs;
    
    public static DashBoard db;
    public static void ObjPass(DashBoard obj)
    {
        db=obj;
    }
    
    String dept=StudentLogin.dept;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        classField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Sec = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ATtable = new javax.swing.JTable();
        GOButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        TAttendance = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(26, 204, 255));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Attendence");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Class:");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Section :");

        ATtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Name", "Class", "Section", "Present", "Absent"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ATtable);

        GOButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        GOButton.setText("GO");
        GOButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GOButtonActionPerformed(evt);
            }
        });

        CancelButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        CancelButton.setText("Back");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        TAttendance.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        TAttendance.setText("Take Attendance");
        TAttendance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TAttendanceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(classField, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(194, 194, 194)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Sec, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 607, Short.MAX_VALUE)
                .addComponent(GOButton)
                .addGap(69, 69, 69))
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(classField)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(GOButton))
                                    .addGap(0, 0, Short.MAX_VALUE)))
                            .addGap(5, 5, 5)))
                    .addComponent(Sec, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelButton)
                    .addComponent(TAttendance))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void GOButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GOButtonActionPerformed
        try 
        {
            
            Class.forName("com.mysql.jdbc.Driver");
            con=(com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://localhost/studentmanagement","root","");
            pst=(PreparedStatement) con.prepareStatement("SELECT * FROM parfoemance WHERE Class=? and Section=? and Dept=?");
            pst.setInt(1, Integer.parseInt(classField.getText()));
            pst.setString(2, Sec.getText());
            pst.setString(3, dept);
            rs=pst.executeQuery();
            
            
            
            while(rs.next())
            {
                rowdata[0]=rs.getInt("id");
                rowdata[1]=rs.getString("Name");
                rowdata[2]=rs.getInt("Class");
                rowdata[3]=rs.getString("Section");
                rowdata[4]=false;
                rowdata[5]=false;
                model.addRow(rowdata);
            }
        } 
        catch (ClassNotFoundException ex) {
            Logger.getLogger(Attendence.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (SQLException ex) {
            Logger.getLogger(Attendence.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GOButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        this.setVisible(false);
        db.show();
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void TAttendanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TAttendanceActionPerformed
        String d; int present=0,absent=0;
        String state1,state2;
        int col=0;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            con=(com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://localhost/studentmanagement","root","");
            if(model.getRowCount()==0)
            {
                JOptionPane.showMessageDialog(this, "Student list not found!");
            }
            else
            {
                for(int row=0;row<model.getRowCount();row++)
                {
                    state1=String.valueOf(model.getValueAt(row, 4));
                    state2=String.valueOf(model.getValueAt(row, 5));

                    if(state1.equals(state2))
                    {
                        JOptionPane.showMessageDialog(this, "A student cant be both absent and present at the same time!");
                        model.setValueAt(false, row, 4);
                        model.setValueAt(false, row, 5);
                    }
                    else
                    {
                        if(state1.equals("true"))
                        {
                            d=String.valueOf(model.getValueAt(row, 0));
                            pst=(PreparedStatement) con.prepareStatement("SELECT * FROM parfoemance WHERE id=? and Class=? and Dept=? and Section=?");
                            pst.setInt(1, Integer.parseInt(d));
                            pst.setInt(2, Integer.parseInt(classField.getText()));
                            pst.setString(3, StudentLogin.dept);
                            pst.setString(4, Sec.getText());
                            rs=pst.executeQuery();
                            
                            if(rs.next())
                            {
                                present=rs.getInt("Present");
                            }
                            present=present+1;
                            
                            pst2=(PreparedStatement) con.prepareStatement("UPDATE parfoemance SET Present=? WHERE id=? and Class=? and Dept=? and Section=?");
                            pst2.setInt(1, present);
                            pst2.setInt(2, Integer.parseInt(d));
                            pst2.setInt(3, Integer.parseInt(classField.getText()));
                            pst2.setString(4, StudentLogin.dept);
                            pst2.setString(5, Sec.getText());
                            pst2.executeUpdate();
                        }
                        else if(state2.equals("true"))
                        {
                            d=String.valueOf(model.getValueAt(row, 0));
                            pst=(PreparedStatement) con.prepareStatement("SELECT * FROM parfoemance WHERE id=? and Class=? and Dept=? and Section=?");
                            pst.setInt(1, Integer.parseInt(d));
                            pst.setInt(2, Integer.parseInt(classField.getText()));
                            pst.setString(3, StudentLogin.dept);
                            pst.setString(4, Sec.getText());
                            rs=pst.executeQuery();
                            
                            if(rs.next())
                            {
                                absent=rs.getInt("Absent");
                            }
                            absent=absent+1;
                            
                            pst2=(PreparedStatement) con.prepareStatement("UPDATE parfoemance SET Absent=? WHERE id=? and Class=? and Dept=? and Section=?");
                            pst2.setInt(1, absent);
                            pst2.setInt(2, Integer.parseInt(d));
                            pst2.setInt(3, Integer.parseInt(classField.getText()));
                            pst2.setString(4, StudentLogin.dept);
                            pst2.setString(5, Sec.getText());
                            pst2.executeUpdate();
                        }
                    }
                }

            }
        }
        catch(ClassNotFoundException ex)
        {
            Logger.getLogger(EditInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch(SQLException ex)
        {
            Logger.getLogger(EditInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TAttendanceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Attendence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Attendence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Attendence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Attendence.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Attendence().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ATtable;
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton GOButton;
    private javax.swing.JTextField Sec;
    private javax.swing.JButton TAttendance;
    private javax.swing.JTextField classField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
